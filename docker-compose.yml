version: '2.2'

x-es_instance: &_es_instance
    image: docker.elastic.co/elasticsearch/elasticsearch:$ES_VERSION
    mem_limit: $ES_MAX_MEM
    ulimits:
        nofile:
            soft: 65535
            hard: 65535
        memlock:
            soft: -1
            hard: -1

services:
    es01:
        <<: *_es_instance
        container_name: $ES_NODE1
        environment:
            - node.name=$ES_NODE1
            - discovery.seed_hosts=$ES_NODE2,$ES_NODE3
            # default
            - cluster.name=es-arkime-cluster
            - cluster.initial_master_nodes=$ES_NODE1,$ES_NODE2,$ES_NODE3
            - bootstrap.memory_lock=true
        volumes:
            - $ES_DATA_DIR/$ES_NODE1:/usr/share/elasticsearch/data
    es02:
        <<: *_es_instance
        container_name: $ES_NODE2
        environment:
            - node.name=$ES_NODE2
            - discovery.seed_hosts=$ES_NODE1,$ES_NODE3
            # default
            - cluster.name=es-arkime-cluster
            - cluster.initial_master_nodes=$ES_NODE1,$ES_NODE2,$ES_NODE3
            - bootstrap.memory_lock=true
        volumes:
            - $ES_DATA_DIR/$ES_NODE2:/usr/share/elasticsearch/data
    es03:
        <<: *_es_instance
        container_name: $ES_NODE3
        environment:
            - node.name=$ES_NODE3
            - discovery.seed_hosts=$ES_NODE1,$ES_NODE2
            # default
            - cluster.name=es-arkime-cluster
            - cluster.initial_master_nodes=$ES_NODE1,$ES_NODE2,$ES_NODE3
            - bootstrap.memory_lock=true
        volumes:
            - $ES_DATA_DIR/$ES_NODE3:/usr/share/elasticsearch/data

    arkime:
        build:
            context: .
            dockerfile: Dockerfile
        depends_on:
            - $ES_NODE1
            - $ES_NODE2
            - $ES_NODE3
            - vpn
        environment:
            - ES_HOST=$ES_NODE1
            - ES_PORT=9200
        volumes:
            - arkime_config:/data/config
            - arkime_logs:/data/logs
            - $PCAP_DIR:/data/pcap
        network_mode: "service:vpn"

    vpn:
        # This container will setup an openvpn connection to the challenge infra.
        # We'll proxy any containers that need access to the chals through
        # this network.
        image: dperson/openvpn-client
        # cap_add, security_opt, and volume required for the image to function
        cap_add:
        - net_admin
        networks:
        - default
        dns:
            - 1.1.1.1
            - 1.0.0.1
        tmpfs:
            - /run
            - /tmp
        security_opt:
            - label:disable
        stdin_open: true
        tty: true
        volumes:
            - /dev/net:/dev/net:z
            # Put .ovpn configuration file in the /vpn directory
            - ./vpn:/vpn
        ports:
            - 127.0.0.1:$ARKIME_PORT:8005
        entrypoint:
            - "/sbin/tini"
            - "--"
            - "bash"
            - "-c"
            - "(ls /vpn/*.ovpn || sleep infinity) && /usr/bin/openvpn.sh"

volumes:
    arkime_config:
    arkime_logs:
